{"version":3,"sources":["redux/operations.js","redux/actions.js","redux/reducer.js","redux/store.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","App.GlobalStyle.js","redux/selectors.js","App.js","index.js"],"names":["axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","data","addContact","name","number","contact","post","deleteContact","id","delete","changeFilter","createAction","itemReducer","createReducer","fulfilled","_","payload","state","filter","filterReducer","isLoading","pending","rejected","error","action","alert","rootReducer","combineReducers","items","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","AddContactButton","styled","button","InputValue","input","ContactForm","useState","setName","setNumber","dispatch","useDispatch","useSelector","handleChange","event","target","value","checkExistContact","some","item","toLowerCase","reset","onSubmit","preventDefault","toast","nanoid","type","onChange","pattern","title","required","Filter","DeleteContactButton","getFilteredContacts","trim","normalizedFilter","includes","ContactList","map","onClick","Global","createGlobalStyle","PhoneBookContainer","div","getItems","App","itemsSelector","useEffect","contactsOperations","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2223b2f1.chunk.js","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://62051128161670001741b54b.mockapi.io/api/v1';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'items/fetchContacts',\r\n  async () => {\r\n    const { data } = await axios.get('/contacts');\r\n    return data;\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'items/addContact',\r\n  async ({ name, number }) => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n    const { data } = await axios.post('/contacts', contact);\r\n    return data;\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'items/deleteContact',\r\n  async ({ id }) => {\r\n    const { data } = await axios.delete(`/contacts/${id}`);\r\n    return data;\r\n  },\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('filter/changeFilter');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { fetchContacts, deleteContact, addContact } from './operations';\r\nimport { changeFilter } from './actions';\r\n\r\nexport const itemReducer = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload.id),\r\n});\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const isLoading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [addContact.pending]: () => true,\r\n  [deleteContact.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [addContact.fulfilled]: () => false,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nexport const error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, { action }) =>\r\n    alert('Fetch contact error: ', action.payload),\r\n  [fetchContacts.pending]: () => null,\r\n  [addContact.rejected]: (_, { action }) =>\r\n    alert('Add contact error: ', action.payload),\r\n  [addContact.pending]: () => null,\r\n  [deleteContact.rejected]: (_, { action }) =>\r\n    alert('Delete contact error: ', action.payload),\r\n  [deleteContact.pending]: () => null,\r\n});\r\n\r\nexport const rootReducer = combineReducers({\r\n  items: itemReducer,\r\n  filter: filterReducer,\r\n  isLoading,\r\n  error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport { rootReducer } from './reducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: getDefaultMiddleware => [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  ],\r\n});\r\n","import styled from 'styled-components';\r\n\r\nexport const AddContactButton = styled.button`\r\n   {\r\n    padding: 5px 30px;\r\n    margin: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 10%;\r\n    box-shadow: 0px 4px 10px 2px rgba(black, 0.2);\r\n    font-weight: bold;\r\n    color: #00ff00;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nexport const InputValue = styled.input`\r\n   {\r\n    padding: 5px;\r\n    margin: 10px;\r\n    background-color: #efefef;\r\n    border-color: #cccccc;\r\n  }\r\n`;\r\n","import { useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport { nanoid } from 'nanoid';\nimport { AddContactButton, InputValue } from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const items = useSelector(state => state.items);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (checkExistContact(name)) {\n      toast.error('This Name is already exists !');\n      reset();\n      return;\n    }\n    dispatch(addContact({ id: nanoid(5), name, number }));\n    reset();\n  };\n\n  const checkExistContact = name => {\n    const result = items.some(\n      item => item.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (result) {\n      return 1;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Toaster />\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name:&nbsp;&nbsp;&nbsp;\n          <InputValue\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <br />\n        <label>\n          Number:\n          <InputValue\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <br />\n        <AddContactButton type=\"submit\">Add contact</AddContactButton>\n      </form>\n    </>\n  );\n}\n","import styled from 'styled-components';\r\n\r\nexport const InputValue = styled.input`\r\n   {\r\n    padding: 5px;\r\n    margin: 10px;\r\n    background-color: #efefef;\r\n    border-color: #cccccc;\r\n  }\r\n`;\r\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/actions';\nimport { InputValue } from './Filter.styled';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  const checkFilter = event => {\n    dispatch(changeFilter(event.target.value));\n  };\n\n  return (\n    <label>\n      <i>Find contacts by name</i>\n      <InputValue type=\"text\" value={filter} onChange={checkFilter} />\n    </label>\n  );\n}\n","import styled from 'styled-components';\r\n\r\nexport const DeleteContactButton = styled.button`\r\n   {\r\n    padding: 5px 20px;\r\n    margin: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 10%;\r\n    box-shadow: 0px 4px 10px 2px rgba(black, 0.2);\r\n    color: #ff0000;\r\n    border-color: #cccccc;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/operations';\nimport { DeleteContactButton } from './ContactList.styled';\n\nconst getFilteredContacts = (items, filter) => {\n  if (filter.trim() === '') {\n    return items;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  return items.filter(item =>\n    item.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(state => state.filter);\n  const items = useSelector(state => state.items);\n\n  return (\n    <ul>\n      {getFilteredContacts(items, filter).map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <DeleteContactButton\n            type=\"button\"\n            name=\"delete\"\n            onClick={() => dispatch(deleteContact({ id }))}\n          >\n            Delete\n          </DeleteContactButton>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const Global = createGlobalStyle`\r\n*{\r\n  padding: 0px;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-size: 20px;\r\n}\r\n\r\nh1, h2{ \r\nmargin: 10px;\r\n}\r\n`;\r\n\r\nexport const PhoneBookContainer = styled.div`\r\n   {\r\n    width: 100%;\r\n  }\r\n`;\r\n","export const getItems = state => state.items;\r\n","import { useEffect } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Global, PhoneBookContainer } from './App.GlobalStyle';\nimport { contactsOperations, itemsSelector } from './redux';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const items = useSelector(itemsSelector.getItems);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Global />\n      <PhoneBookContainer>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        {items.length > 0 && <Filter />}\n        {items.length > 0 ? <ContactList /> : <p>Your phonebook is empty</p>}\n      </PhoneBookContainer>\n    </>\n  );\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}